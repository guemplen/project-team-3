var u=(o,e,t)=>{if(!e.has(o))throw TypeError("Cannot "+t)};var d=(o,e,t)=>{if(e.has(o))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(o):e.set(o,t)};var c=(o,e,t)=>(u(o,e,"access private method"),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))l(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const s of i.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&l(s)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerpolicy&&(i.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?i.credentials="include":r.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function l(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();var n,a;class f{constructor(){d(this,n);this.tagsList=document.querySelector(".js-tags"),this.activeTag=document.querySelector(".js-tags .active"),this.tagsList.addEventListener("click",this.changeActiveTag.bind(this))}changeActiveTag(e){const{target:t}=e;if(t.nodeName==="BUTTON"){if(this.activeTag===t){c(this,n,a).call(this,t.textContent);return}this.activeTag.classList.remove("active"),t.classList.add("active"),c(this,n,a).call(this,t.textContent),this.activeTag=t}}}n=new WeakSet,a=function(e){navigator.clipboard.writeText(e).then(()=>{alert("Text copied to clipboard")}).catch(t=>{console.error("Error in copying text: ",t)})};new f;
